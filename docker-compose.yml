version: '3.7'

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
  cache:
    image: redis:latest
    ports:
      - '6379:6379'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 2s
      retries: 10
    volumes:
      - ./cache:/data
    restart: always
    entrypoint: redis-server --appendonly yes
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    depends_on:
      cache:
        condition: service_healthy
    volumes:
      - ./src:/home/node/app/src
      - ./database:/home/node/app/database
      - ./nodemon.json:/home/node/app/nodemon.json
    environment:
      PROD_POSTGRESS_URL: ${PROD_POSTGRESS_URL}
      POSTGRESS_URL: ${POSTGRESS_URL}
      CORS_ORIGIN: ${CORS_ORIGIN}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
    expose:
      - '4000'
    ports:
      - '4000:4000'
    command: npm run dev